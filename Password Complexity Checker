# PRODIGY_CS_03
#include <stdio.h>
#include <string.h>
#include <ctype.h>

// Function to check if password contains an uppercase letter
int hasUppercase(const char* password) {
    while (*password) {
        if (isupper((unsigned char)*password))
            return 1;
        password++;
    }
    return 0;
}

// Function to check if password contains a lowercase letter
int hasLowercase(const char* password) {
    while (*password) {
        if (islower((unsigned char)*password))
            return 1;
        password++;
    }
    return 0;
}

// Function to check if password contains a digit
int hasDigit(const char* password) {
    while (*password) {
        if (isdigit((unsigned char)*password))
            return 1;
        password++;
    }
    return 0;
}

// Function to check if password contains a special character
int hasSpecialChar(const char* password) {
    const char specialChars[] = "!@#$%^&*()-_+=<>?,./";
    while (*password) {
        for (int i = 0; i < strlen(specialChars); i++) {
            if (*password == specialChars[i])
                return 1;
        }
        password++;
    }
    return 0;
}

// Function to assess password strength
void assessPasswordStrength(const char* password) {
    int length = strlen(password);
    int upper = hasUppercase(password);
    int lower = hasLowercase(password);
    int digit = hasDigit(password);
    int special = hasSpecialChar(password);

    // Feedback on password properties
    printf("Password length: %d\n", length);
    if (length < 8) {
        printf("Your password is too short! (Minimum 8 characters required)\n");
    }

    printf("Contains uppercase letters: %s\n", upper ? "Yes" : "No");
    printf("Contains lowercase letters: %s\n", lower ? "Yes" : "No");
    printf("Contains digits: %s\n", digit ? "Yes" : "No");
    printf("Contains special characters: %s\n", special ? "Yes" : "No");

    // Strength assessment
    if (length >= 8 && upper && lower && digit && special) {
        printf("Your password is strong!\n");
    } else if (length >= 8 && ((upper && lower && digit) || (upper && lower && special))) {
        printf("Your password is moderate.\n");
    } else {
        printf("Your password is weak.\n");
    }
}

int main() {
    char password[100];

    printf("Enter your password: ");
    fgets(password, sizeof(password), stdin);

    // Remove newline character from fgets input
    password[strcspn(password, "\n")] = 0;

    assessPasswordStrength(password);

    return 0;
}

